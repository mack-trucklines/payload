;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name payload.core, :imports nil, :requires {reagent.core reagent.core, r reagent.core}, :uses nil, :defs {input {:protocol-inline nil, :meta {:arglists (quote ([type at int?])), :end-column 12, :end-line 38, :column 7, :line 38, :file "/vagrant/src/payload/core.cljs"}, :name payload.core/input, :variadic false, :file "src/payload/core.cljs", :end-column 12, :method-params ([type at int?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 3, :fn-var true, :arglists (quote ([type at int?])), :test true}, trigger {:meta {:end-column 13, :end-line 4, :column 6, :line 4, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 4, :column 1, :end-line 4, :end-column 13, :test true, :name payload.core/trigger}, trk {:meta {:end-column 9, :end-line 7, :column 6, :line 7, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 7, :column 1, :end-line 7, :end-column 9, :test true, :name payload.core/trk}, advances {:meta {:end-column 14, :end-line 12, :column 6, :line 12, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 12, :column 1, :end-line 12, :end-column 14, :test true, :name payload.core/advances}, destination {:meta {:end-column 17, :end-line 9, :column 6, :line 9, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 9, :column 1, :end-line 9, :end-column 17, :test true, :name payload.core/destination}, previous-inputs {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 22, :end-line 113, :column 7, :line 113, :file "/vagrant/src/payload/core.cljs"}, :name payload.core/previous-inputs, :variadic false, :file "src/payload/core.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, total-mi {:meta {:end-column 14, :end-line 27, :column 6, :line 27, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 27, :column 1, :end-line 27, :end-column 14, :test true, :name payload.core/total-mi}, date {:meta {:end-column 10, :end-line 6, :column 6, :line 6, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 6, :column 1, :end-line 6, :end-column 10, :test true, :name payload.core/date}, dh {:meta {:end-column 8, :end-line 22, :column 6, :line 22, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 22, :column 1, :end-line 22, :end-column 8, :test true, :name payload.core/dh}, total-hours {:meta {:end-column 17, :end-line 15, :column 6, :line 15, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 15, :column 1, :end-line 15, :end-column 17, :test true, :name payload.core/total-hours}, stops {:meta {:end-column 11, :end-line 20, :column 6, :line 20, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 20, :column 1, :end-line 20, :end-column 11, :test true, :name payload.core/stops}, total-loaded {:meta {:end-column 18, :end-line 25, :column 6, :line 25, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 25, :column 1, :end-line 25, :end-column 18, :test true, :name payload.core/total-loaded}, revenue {:meta {:end-column 13, :end-line 10, :column 6, :line 10, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 10, :column 1, :end-line 10, :end-column 13, :test true, :name payload.core/revenue}, full {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 11, :end-line 228, :column 7, :line 228, :file "/vagrant/src/payload/core.cljs"}, :name payload.core/full, :variadic false, :file "src/payload/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 228, :end-line 228, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, total-row {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 16, :end-line 158, :column 7, :line 158, :file "/vagrant/src/payload/core.cljs"}, :name payload.core/total-row, :variadic false, :file "src/payload/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, total-fuel {:meta {:end-column 16, :end-line 17, :column 6, :line 17, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 17, :column 1, :end-line 17, :end-column 16, :test true, :name payload.core/total-fuel}, total-stops {:meta {:end-column 17, :end-line 21, :column 6, :line 21, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 21, :column 1, :end-line 21, :end-column 17, :test true, :name payload.core/total-stops}, button {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 13, :end-line 197, :column 7, :line 197, :file "/vagrant/src/payload/core.cljs"}, :name payload.core/button, :variadic false, :file "src/payload/core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 197, :end-line 197, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, expenses {:meta {:end-column 14, :end-line 13, :column 6, :line 13, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 13, :column 1, :end-line 13, :end-column 14, :test true, :name payload.core/expenses}, input-row {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 16, :end-line 138, :column 7, :line 138, :file "/vagrant/src/payload/core.cljs"}, :name payload.core/input-row, :variadic false, :file "src/payload/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, total-revenue {:meta {:end-column 19, :end-line 11, :column 6, :line 11, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 11, :column 1, :end-line 11, :end-column 19, :test true, :name payload.core/total-revenue}, loaded {:meta {:end-column 12, :end-line 24, :column 6, :line 24, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 24, :column 1, :end-line 24, :end-column 12, :test true, :name payload.core/loaded}, start {:protocol-inline nil, :meta {:arglists (quote ([])), :doc "Mounts the necessary reagent component to document element with id 'id'", :end-column 12, :end-line 240, :column 7, :line 240, :file "/vagrant/src/payload/core.cljs"}, :name payload.core/start, :variadic false, :file "src/payload/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 240, :end-line 240, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Mounts the necessary reagent component to document element with id 'id'", :test true}, fuel {:meta {:end-column 10, :end-line 16, :column 6, :line 16, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 16, :column 1, :end-line 16, :end-column 10, :test true, :name payload.core/fuel}, header {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 13, :end-line 46, :column 7, :line 46, :file "/vagrant/src/payload/core.cljs"}, :name payload.core/header, :variadic false, :file "src/payload/core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, submitted {:meta {:end-column 15, :end-line 28, :column 6, :line 28, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 28, :column 1, :end-line 28, :end-column 15, :test true, :name payload.core/submitted}, mi {:meta {:end-column 8, :end-line 26, :column 6, :line 26, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 26, :column 1, :end-line 26, :end-column 8, :test true, :name payload.core/mi}, pro {:meta {:end-column 9, :end-line 5, :column 6, :line 5, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 5, :column 1, :end-line 5, :end-column 9, :test true, :name payload.core/pro}, handle-click {:protocol-inline nil, :meta {:arglists (quote ([input-attrs])), :end-column 19, :end-line 172, :column 7, :line 172, :file "/vagrant/src/payload/core.cljs"}, :name payload.core/handle-click, :variadic false, :file "src/payload/core.cljs", :end-column 19, :method-params ([input-attrs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 1, :fn-var true, :arglists (quote ([input-attrs])), :test true}, counter {:meta {:end-column 13, :end-line 30, :column 6, :line 30, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 30, :column 1, :end-line 30, :end-column 13, :test true, :name payload.core/counter}, total-per-dm {:meta {:end-column 18, :end-line 19, :column 6, :line 19, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 19, :column 1, :end-line 19, :end-column 18, :test true, :name payload.core/total-per-dm}, add-input {:protocol-inline nil, :meta {:arglists (quote ([input])), :end-column 16, :end-line 32, :column 7, :line 32, :file "/vagrant/src/payload/core.cljs"}, :name payload.core/add-input, :variadic false, :file "src/payload/core.cljs", :end-column 16, :method-params ([input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([input])), :test true}, per-dm {:meta {:end-column 12, :end-line 18, :column 6, :line 18, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 18, :column 1, :end-line 18, :end-column 12, :test true, :name payload.core/per-dm}, total-dh {:meta {:end-column 14, :end-line 23, :column 6, :line 23, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 23, :column 1, :end-line 23, :end-column 14, :test true, :name payload.core/total-dh}, heading-row {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 18, :end-line 95, :column 7, :line 95, :file "/vagrant/src/payload/core.cljs"}, :name payload.core/heading-row, :variadic false, :file "src/payload/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, hours {:meta {:end-column 11, :end-line 14, :column 6, :line 14, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 14, :column 1, :end-line 14, :end-column 11, :test true, :name payload.core/hours}, origin {:meta {:end-column 12, :end-line 8, :column 6, :line 8, :file "/vagrant/src/payload/core.cljs"}, :file "src/payload/core.cljs", :line 8, :column 1, :end-line 8, :end-column 12, :test true, :name payload.core/origin}}, :require-macros nil, :cljs.analyzer/constants {:order [:id :input.border-less :type :value :on-change :tbody :tr :td :colSpan :th :pro :date :trk :origin :destination :revenue :fuel :stops :dh :hours :loaded :mi :per-dm :key :button :on-click :div :table], :seen #{:date :dh :stops :revenue :tbody :table :key :button :input.border-less :td :value :th :tr :loaded :type :fuel :mi :on-click :pro :div :colSpan :per-dm :id :hours :origin :on-change :trk :destination}}, :doc nil}